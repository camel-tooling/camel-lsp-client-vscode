name: Test matrixes of VS Code versions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        vscode-version: ["1.67.2"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'
    - uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
    # - name: Install JBang
    #   uses: sdkman/sdkman-action@master
    #   id: sdkman
    #   with:
    #     candidate: jbang
    #     version: 0.105.1
    - name: Install JBang
      run: >
         curl -Ls https://sh.jbang.dev | bash -s - app setup
         && which jbang
         && which jbang >> $GITHUB_PATH
    - name: Install global dependencies
      run: npm install -g typescript vsce
    - name: npm-ci
      run: npm ci
    - name: npm-compile
      run: npm run compile
    - name: test
      run: |
        source ~/.bashrc
        jbang version
        xvfb-run -a npm test
      env:
          CODE_VERSION: ${{ matrix.vscode-version }}
    - name: ui-test
      env:
          CODE_VERSION: ${{ matrix.vscode-version }}
      run: xvfb-run -a npm run ui-test
    - name: Store VS Code logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: vscode-logs ${{ matrix.vscode-version }}
        path: ~/.config/Code/logs
    - name: Store VS Code UI Tests screenshots on failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ui-test-screenshots ${{ matrix.vscode-version }}
        path: uitest-resources/screenshots
