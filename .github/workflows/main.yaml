name: Main CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        version: ["1.67.2", max] # ["x.x.x" | latest | max]
        type: [stable] # [stable | insider]
      fail-fast: false

    env:
      CODE_VERSION: ${{ matrix.version }}
      CODE_TYPE: ${{ matrix.type }}

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"

      - name: Test java
        run: java --version

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Setup vsce
        run: |
          npm install -g typescript @vscode/vsce
          vsce --version

      - name: npm-ci
        run: npm ci

      - name: npm-vscode:prepublish
        run: npm run vscode:prepublish

      - name: test (ubuntu)
        id: test_Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run --auto-servernum npm test

      - name: test (macos, windows)
        if: matrix.os != 'ubuntu-latest'
        run: npm test

      - name: ui test (ubuntu)
        id: uiTest_Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run --auto-servernum npm run ui-test

      # - name: ui test (macos, windows)
      #   id: uiTest_MacOS_Windows
      #   if: matrix.os != 'ubuntu-latest'
      #   run: npm run ui-test

      - name: vsce-package
        run: vsce package

      - name: Store Camel Language Server log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-camel-lsp-log
          path: /tmp/log-camel-lsp.log

      - name: Store VS Code Logs (Ubuntu)
        uses: actions/upload-artifact@v3
        if: failure() && matrix.os == 'ubuntu-latest'
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-vscode-logs
          path: ~/.config/Code/logs/*

      - name: Store VS Code Logs (Macos)
        uses: actions/upload-artifact@v3
        if: failure() && matrix.os == 'macos-latest'
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-vscode-logs
          path: ~/Library/Application Support/Code/logs/*

      - name: Store VS Code Logs (Windows)
        uses: actions/upload-artifact@v3
        if: failure() && matrix.os == 'windows-latest'
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-vscode-logs
          path: $env:USERPROFILE\AppData\Code\logs\*

      - name: Store UI test log
        uses: actions/upload-artifact@v3
        if: failure() && (steps.uiTest_Ubuntu.outcome == 'failure' || steps.uiTest_MacOS_Windows.outcome == 'failure')
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-ui-test-logs
          path: test-resources/settings/logs/*

      - name: Store UI Test Screenshots
        uses: actions/upload-artifact@v3
        if: failure() && (steps.uiTest_Ubuntu.outcome == 'failure' || steps.uiTest_MacOS_Windows.outcome == 'failure')
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-ui-test-screenshots
          path: test-resources/screenshots/*.png
