name: Camel Version CI

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  camel:
    strategy:
      fail-fast: false
      matrix:
        camel-version:
          - "4.8.7"
          - "4.10.4"
          - "4.0.0.redhat-00036"
          - "4.4.0.redhat-00046"
          - "4.8.3.redhat-00004"
          - "4.10.3.redhat-00020"

    env:
      CODE_VERSION: max
      CODE_TYPE: stable
      TEST_RESOURCES: test-resources
      CAMEL_VERSION: ${{ matrix.camel-version }}

    runs-on: ubuntu-latest
    name: ${{ matrix.camel-version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: "temurin"

      - name: Test java
        run: java --version

      - name: Install JBang
        run: |
          curl -Ls https://sh.jbang.dev | bash -s - app setup
          echo "$HOME/.jbang/bin" >> $GITHUB_PATH

      - name: Setup JBang (trusted sources)
        run: jbang trust add https://github.com/apache/

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: npm

      - name: Setup vsce
        run: |
          npm install -g typescript @vscode/vsce
          vsce --version

      - name: npm-ci
        run: npm ci

      - name: Allow unprivileged user namespace (ubuntu)
        run: sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - name: ui test
        id: uiTest
        run: xvfb-run --auto-servernum npm run ui-test

      - name: vsce-package
        run: vsce package

      - name: Store Camel Language Server log
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.camel-version }}-camel-lsp-log
          path: |
            /tmp/log-camel-lsp.log
            /tmp/log-camel*.log.gz

      - name: Store UI test logs
        uses: actions/upload-artifact@v4
        if: |
          (failure() || cancelled()) &&
          (steps.uiTest.outcome == 'failure' ||
          steps.uiTest.outcome == 'cancelled')
        with:
          name: ${{ matrix.camel-version }}-ui-test-logs
          path: test-resources/settings/logs/*

      - name: Store UI Test Screenshots
        uses: actions/upload-artifact@v4
        if: |
          (failure() || cancelled()) &&
          (steps.uiTest.outcome == 'failure' ||
          steps.uiTest.outcome == 'cancelled')
        with:
          name: ${{ matrix.camel-version }}-ui-test-screenshots
          path: test-resources/screenshots/*/*.png

  check:
    if: always()
    runs-on: ubuntu-latest
    name: Status Check
    needs: [ camel ]
    steps:
      - name: Test Matrix Result
        run: |
          echo result = ${{ needs.camel.result }}
      - name: Status Check - success
        if: ${{ needs.camel.result == 'success' }}
        run: |
          echo "All tests successfully completed!"
          exit 0
      - name: Status Check - failure
        if: ${{ needs.camel.result != 'success' }}
        run: |
          echo "Status Check failed!"
          exit 1
